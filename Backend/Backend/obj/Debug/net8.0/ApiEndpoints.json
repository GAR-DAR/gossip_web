[
  {
    "ContainingType": "Backend.Controllers.AdminController",
    "Method": "BanUser",
    "RelativePath": "Admin/ban",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userID",
        "Type": "System.UInt32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Controllers.AdminController",
    "Method": "GetList",
    "RelativePath": "Admin/banned/list",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Controllers.AdminController",
    "Method": "UnbanUser",
    "RelativePath": "Admin/unban",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userID",
        "Type": "System.UInt32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Controllers.ChatsController",
    "Method": "GetUserChats",
    "RelativePath": "Chats/all",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userID",
        "Type": "System.UInt32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Controllers.ChatsController",
    "Method": "ChatCreate",
    "RelativePath": "Chats/create",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "chat",
        "Type": "Backend.Models.ModelsID.ChatModelID",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Controllers.ReferenceDataController",
    "Method": "GetDegrees",
    "RelativePath": "ReferenceData/degrees",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Controllers.ReferenceDataController",
    "Method": "GetFields",
    "RelativePath": "ReferenceData/fields",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Controllers.ReferenceDataController",
    "Method": "GetSpecializations",
    "RelativePath": "ReferenceData/specializations",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Controllers.ReferenceDataController",
    "Method": "GetStatuses",
    "RelativePath": "ReferenceData/statuses",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Controllers.ReferenceDataController",
    "Method": "GetUniversities",
    "RelativePath": "ReferenceData/universities",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Controllers.TopicController",
    "Method": "createReply",
    "RelativePath": "Topics/createReply",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "reply",
        "Type": "Backend.Models.ModelsID.ParentReplyModelID",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Controllers.TopicController",
    "Method": "createReplyToReply",
    "RelativePath": "Topics/createReplyToReply",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "reply",
        "Type": "Backend.Models.ModelsID.ChildReplyModelID",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Controllers.TopicController",
    "Method": "CreateTopic",
    "RelativePath": "Topics/createTopic",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "topicModelID",
        "Type": "Backend.Models.ModelsID.TopicModelID",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Controllers.TopicController",
    "Method": "GetReplies",
    "RelativePath": "Topics/getReplies",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "topicID",
        "Type": "System.UInt32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Controllers.TopicController",
    "Method": "GetReplyToReply",
    "RelativePath": "Topics/getReplyToReply",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "parentReplyID",
        "Type": "System.UInt32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Controllers.TopicController",
    "Method": "LoadAllTopics",
    "RelativePath": "Topics/home",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "page",
        "Type": "System.Nullable\u00601[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "amount",
        "Type": "System.Nullable\u00601[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Controllers.UserController",
    "Method": "EditUserInfo",
    "RelativePath": "User/edit/userinfo",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "ChangedUserModelID",
        "Type": "Backend.Models.ModelsID.UserModelID",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Controllers.UserController",
    "Method": "EditUserPassword",
    "RelativePath": "User/edit/userpassword",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userID",
        "Type": "System.UInt32",
        "IsRequired": false
      },
      {
        "Name": "password",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Controllers.UserController",
    "Method": "EditUserPhoto",
    "RelativePath": "User/edit/userphoto",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userID",
        "Type": "System.UInt32",
        "IsRequired": false
      },
      {
        "Name": "photo",
        "Type": "Microsoft.AspNetCore.Http.IFormFile",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Controllers.UserController",
    "Method": "GetUsersByIds",
    "RelativePath": "User/getusers",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "ids",
        "Type": "System.UInt32[]",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Controllers.UserController",
    "Method": "InitToken",
    "RelativePath": "User/initToken",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "token",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Controllers.UserController",
    "Method": "EmailLogin",
    "RelativePath": "User/login/email",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "authUser",
        "Type": "Backend.Models.ModelsFull.AuthUserModel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Controllers.UserController",
    "Method": "UsernameLogin",
    "RelativePath": "User/login/username",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "authUser",
        "Type": "Backend.Models.ModelsFull.AuthUserModel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Controllers.UserController",
    "Method": "RegisterFirst",
    "RelativePath": "User/register/first",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "username",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "password",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Controllers.UserController",
    "Method": "RegisterSecond",
    "RelativePath": "User/register/second",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userModel",
        "Type": "Backend.Models.ModelsFull.UserModel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Controllers.UserController",
    "Method": "SendEmail",
    "RelativePath": "User/send/email",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "message",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[Backend.WeatherForecast, Backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetWeatherForecast"
  }
]